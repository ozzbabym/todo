{"version":3,"sources":["components/Todo/Todo.jsx","App.js","redux/reducer.js","index.js","components/Todo/Todo.module.css"],"names":["Todo","task","useSelector","item","selector","dispatch","useDispatch","React","useState","value","setValue","sort","setSort","useEffect","type","payload","className","styles","header","onChange","e","currentTarget","length","placeholder","aria-label","aria-describedby","onClick","obj","id","Date","name","isChecked","alert","taskCount","taskActive","taskComplited","buttonPopup","filter","todoList","map","todoItem","changeIsChecked","checked","target","taskDecoration","App","initialState","store","createStore","state","action","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7c6ac461.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport styles from './Todo.module.css'\r\n\r\nfunction Todo() {\r\n    const task = useSelector(item=>item.task)\r\n    const selector = useSelector(item=>item)\r\n\r\n    const dispatch = useDispatch()\r\n    const [value, setValue] = React.useState('')\r\n    const [sort, setSort] = React.useState(task)\r\n    \r\n    React.useEffect(() => {\r\n        setSort(task)\r\n        dispatch({type: 'ACTIVE_TASK', payload: true})\r\n        dispatch({type: 'COMPLITED_TASK', payload: false})\r\n    }, [task])\r\n\r\n    const addTask = () => {\r\n        let obj = {\r\n            id: new Date(),\r\n            name: value,\r\n            isChecked: false\r\n        }\r\n        if (value.length>1 && value.length<30) {\r\n        dispatch({type: 'ADD_TASK', payload: obj})\r\n        setValue('')\r\n        } else {\r\n          alert('неверно ввели данные')  \r\n        }\r\n    }\r\n\r\n    const deleteTask = (e) => {\r\n        dispatch({type: 'DELETE_TASK', payload: e})\r\n    }\r\n\r\n    const changeIsChecked = (e) => {\r\n        dispatch({type: 'CHECKED_TASK', payload: e})\r\n    }\r\n\r\n    const  allSort = () => {\r\n        setSort(task)\r\n    }\r\n\r\n    const  activeSort = () => {\r\n        const taskActive = task.filter(item=>item.isChecked === false)\r\n        setSort(taskActive)\r\n    }\r\n\r\n    const  complitedSort = () => {\r\n        const taskActive = task.filter(item=>item.isChecked === true)\r\n        setSort(taskActive)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.header}>\r\n                <div className=\"input-group mb-3\">\r\n                    <input onChange={e=>setValue(e.currentTarget.value)}  type=\"text\" className={`form-control ${value.length>1 && value.length<30 ? \"is-valid\" : \"is-invalid\"}`} placeholder=\"enter your task (length max 30 symbols min 2 symbols))\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" value={value}/>\r\n                    <button onClick={addTask} className=\"btn btn-primary\" type=\"button\" id=\"button-addon2\">Add</button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.taskCount}>\r\n                <div>Task: <span>{task.length}</span></div>\r\n                <div>Active: <span>{selector.taskActive && selector.taskActive.length}</span></div>\r\n                <div>Complited: <span>{selector.taskComplited && selector.taskComplited.length}</span></div>\r\n            </div>\r\n            <div className={styles.buttonPopup}>\r\n                <button onClick={allSort} className='btn btn-secondary'>All</button>\r\n                <button onClick={activeSort} className='btn btn-warning'>Active</button>\r\n                <button onClick={complitedSort} className='btn btn-success'>Complited</button>\r\n            </div>\r\n            <div className={styles.todoList}>\r\n                {sort && sort.map((item)=>{\r\n                    return <div className={styles.todoItem} key={item.id}>\r\n                            <div><input onChange={e=>changeIsChecked({checked: e.target.checked, id: item.id })} type='checkbox' checked={item.isChecked}/></div>\r\n                            <div className={item.isChecked ? styles.taskDecoration : ''}><p>{item.name}</p></div>\r\n                            <div onClick={()=>deleteTask(item.id)}><span className='btn btn-danger'>delete</span></div>\r\n                    </div>}\r\n                )}   \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import './App.css';\nimport Todo from './components/Todo/Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    task: []\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case 'ADD_TASK':{\r\n        return { ...state, task: [...state.task, action.payload] }\r\n        }\r\n    case 'DELETE_TASK':{\r\n        return { ...state, task: state.task.filter(item=>item.id !== action.payload) }\r\n        }\r\n    case 'CHECKED_TASK':{\r\n        const task = state.task.map(value => {\r\n            if(value.id === action.payload.id){\r\n               let valueChecked = {id: value.id, name: value.name, isChecked: action.payload.checked}\r\n               return valueChecked\r\n            }else{\r\n               return value\r\n            }\r\n        })\r\n        return { ...state, task: task }\r\n        }\r\n    case 'ACTIVE_TASK':{\r\n        return { ...state, taskActive: state.task.filter(item=>item.isChecked !== action.payload) }\r\n        }    \r\n    case 'COMPLITED_TASK':{\r\n        return { ...state, taskComplited: state.task.filter(item=>item.isChecked !== action.payload) }\r\n        }    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {reducer} from './redux/reducer'\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\n\nconst store = createStore(reducer)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Todo_header__F_w91\",\"todoList\":\"Todo_todoList__hf6Yv\",\"todoItem\":\"Todo_todoItem__1-xcD\",\"taskDecoration\":\"Todo_taskDecoration__2SF0f\",\"buttonPopup\":\"Todo_buttonPopup__1rBZM\",\"taskCount\":\"Todo_taskCount__2219R\"};"],"sourceRoot":""}